/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthBackendClientObservation struct {

	// Unique name of the auth backend to configure.
	Backend *string `json:"backend,omitempty" tf:"backend,omitempty"`

	// URL to override the default generated endpoint for making AWS EC2 API calls.
	EC2Endpoint *string `json:"ec2Endpoint,omitempty" tf:"ec2_endpoint,omitempty"`

	// URL to override the default generated endpoint for making AWS IAM API calls.
	IAMEndpoint *string `json:"iamEndpoint,omitempty" tf:"iam_endpoint,omitempty"`

	// The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
	IAMServerIDHeaderValue *string `json:"iamServerIdHeaderValue,omitempty" tf:"iam_server_id_header_value,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Target namespace. (requires Enterprise)
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// URL to override the default generated endpoint for making AWS STS API calls.
	StsEndpoint *string `json:"stsEndpoint,omitempty" tf:"sts_endpoint,omitempty"`

	// Region to override the default region for making AWS STS API calls.
	StsRegion *string `json:"stsRegion,omitempty" tf:"sts_region,omitempty"`
}

type AuthBackendClientParameters struct {

	// AWS Access key with permissions to query AWS APIs.
	// +kubebuilder:validation:Optional
	AccessKeySecretRef *v1.SecretKeySelector `json:"accessKeySecretRef,omitempty" tf:"-"`

	// Unique name of the auth backend to configure.
	// +kubebuilder:validation:Optional
	Backend *string `json:"backend,omitempty" tf:"backend,omitempty"`

	// URL to override the default generated endpoint for making AWS EC2 API calls.
	// +kubebuilder:validation:Optional
	EC2Endpoint *string `json:"ec2Endpoint,omitempty" tf:"ec2_endpoint,omitempty"`

	// URL to override the default generated endpoint for making AWS IAM API calls.
	// +kubebuilder:validation:Optional
	IAMEndpoint *string `json:"iamEndpoint,omitempty" tf:"iam_endpoint,omitempty"`

	// The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
	// +kubebuilder:validation:Optional
	IAMServerIDHeaderValue *string `json:"iamServerIdHeaderValue,omitempty" tf:"iam_server_id_header_value,omitempty"`

	// Target namespace. (requires Enterprise)
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// AWS Secret key with permissions to query AWS APIs.
	// +kubebuilder:validation:Optional
	SecretKeySecretRef *v1.SecretKeySelector `json:"secretKeySecretRef,omitempty" tf:"-"`

	// URL to override the default generated endpoint for making AWS STS API calls.
	// +kubebuilder:validation:Optional
	StsEndpoint *string `json:"stsEndpoint,omitempty" tf:"sts_endpoint,omitempty"`

	// Region to override the default region for making AWS STS API calls.
	// +kubebuilder:validation:Optional
	StsRegion *string `json:"stsRegion,omitempty" tf:"sts_region,omitempty"`
}

// AuthBackendClientSpec defines the desired state of AuthBackendClient
type AuthBackendClientSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AuthBackendClientParameters `json:"forProvider"`
}

// AuthBackendClientStatus defines the observed state of AuthBackendClient.
type AuthBackendClientStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AuthBackendClientObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AuthBackendClient is the Schema for the AuthBackendClients API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vault}
type AuthBackendClient struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AuthBackendClientSpec   `json:"spec"`
	Status            AuthBackendClientStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AuthBackendClientList contains a list of AuthBackendClients
type AuthBackendClientList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AuthBackendClient `json:"items"`
}

// Repository type metadata.
var (
	AuthBackendClient_Kind             = "AuthBackendClient"
	AuthBackendClient_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AuthBackendClient_Kind}.String()
	AuthBackendClient_KindAPIVersion   = AuthBackendClient_Kind + "." + CRDGroupVersion.String()
	AuthBackendClient_GroupVersionKind = CRDGroupVersion.WithKind(AuthBackendClient_Kind)
)

func init() {
	SchemeBuilder.Register(&AuthBackendClient{}, &AuthBackendClientList{})
}
