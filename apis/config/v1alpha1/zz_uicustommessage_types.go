/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LinkInitParameters struct {

	// The URL set in the hyperlink's href attribute.
	// The URL of the hyperlink
	Href *string `json:"href,omitempty" tf:"href,omitempty"`

	// The title of the custom message to create.
	// The title of the hyperlink
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type LinkObservation struct {

	// The URL set in the hyperlink's href attribute.
	// The URL of the hyperlink
	Href *string `json:"href,omitempty" tf:"href,omitempty"`

	// The title of the custom message to create.
	// The title of the hyperlink
	Title *string `json:"title,omitempty" tf:"title,omitempty"`
}

type LinkParameters struct {

	// The URL set in the hyperlink's href attribute.
	// The URL of the hyperlink
	// +kubebuilder:validation:Optional
	Href *string `json:"href" tf:"href,omitempty"`

	// The title of the custom message to create.
	// The title of the hyperlink
	// +kubebuilder:validation:Optional
	Title *string `json:"title" tf:"title,omitempty"`
}

type UICustomMessageInitParameters struct {

	// The value true if the custom message is displayed after logins are completed or false if they are
	// displayed during the login in the Vault UI. The default value is true.
	// A flag indicating whether the custom message is displayed pre-login (false) or post-login (true)
	Authenticated *bool `json:"authenticated,omitempty" tf:"authenticated,omitempty"`

	// The time when the custom message expires. If this value is not specified, the custom message never expires.
	// The ending time of the active period of the custom message. Can be omitted for non-expiring message
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// A hyperlink to be included with the message. See below for more details.
	// A block containing a hyperlink associated with the custom message
	Link []LinkInitParameters `json:"link,omitempty" tf:"link,omitempty"`

	// The base64-encoded content of the custom message
	MessageBase64 *string `json:"messageBase64,omitempty" tf:"message_base64,omitempty"`

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// A map of additional options that can be set on the custom message.
	// A map containing additional options for the custom message
	// +mapType=granular
	Options map[string]*string `json:"options,omitempty" tf:"options,omitempty"`

	// The time when the custom message begins to be active. This value can be set to a future time, but cannot
	// occur on or after the end_time value.
	// The starting time of the active period of the custom message
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// The title of the custom message to create.
	// The title of the custom message
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// The presentation type of the custom message. Must be one of the following values: banner or modal.
	// The display type of custom message. Allowed values are banner and modal
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UICustomMessageObservation struct {

	// The value true if the custom message is displayed after logins are completed or false if they are
	// displayed during the login in the Vault UI. The default value is true.
	// A flag indicating whether the custom message is displayed pre-login (false) or post-login (true)
	Authenticated *bool `json:"authenticated,omitempty" tf:"authenticated,omitempty"`

	// The time when the custom message expires. If this value is not specified, the custom message never expires.
	// The ending time of the active period of the custom message. Can be omitted for non-expiring message
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A hyperlink to be included with the message. See below for more details.
	// A block containing a hyperlink associated with the custom message
	Link []LinkObservation `json:"link,omitempty" tf:"link,omitempty"`

	// The base64-encoded content of the custom message
	MessageBase64 *string `json:"messageBase64,omitempty" tf:"message_base64,omitempty"`

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// A map of additional options that can be set on the custom message.
	// A map containing additional options for the custom message
	// +mapType=granular
	Options map[string]*string `json:"options,omitempty" tf:"options,omitempty"`

	// The time when the custom message begins to be active. This value can be set to a future time, but cannot
	// occur on or after the end_time value.
	// The starting time of the active period of the custom message
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// The title of the custom message to create.
	// The title of the custom message
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// The presentation type of the custom message. Must be one of the following values: banner or modal.
	// The display type of custom message. Allowed values are banner and modal
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type UICustomMessageParameters struct {

	// The value true if the custom message is displayed after logins are completed or false if they are
	// displayed during the login in the Vault UI. The default value is true.
	// A flag indicating whether the custom message is displayed pre-login (false) or post-login (true)
	// +kubebuilder:validation:Optional
	Authenticated *bool `json:"authenticated,omitempty" tf:"authenticated,omitempty"`

	// The time when the custom message expires. If this value is not specified, the custom message never expires.
	// The ending time of the active period of the custom message. Can be omitted for non-expiring message
	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// A hyperlink to be included with the message. See below for more details.
	// A block containing a hyperlink associated with the custom message
	// +kubebuilder:validation:Optional
	Link []LinkParameters `json:"link,omitempty" tf:"link,omitempty"`

	// The base64-encoded content of the custom message
	// +kubebuilder:validation:Optional
	MessageBase64 *string `json:"messageBase64,omitempty" tf:"message_base64,omitempty"`

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// A map of additional options that can be set on the custom message.
	// A map containing additional options for the custom message
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Options map[string]*string `json:"options,omitempty" tf:"options,omitempty"`

	// The time when the custom message begins to be active. This value can be set to a future time, but cannot
	// occur on or after the end_time value.
	// The starting time of the active period of the custom message
	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// The title of the custom message to create.
	// The title of the custom message
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// The presentation type of the custom message. Must be one of the following values: banner or modal.
	// The display type of custom message. Allowed values are banner and modal
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// UICustomMessageSpec defines the desired state of UICustomMessage
type UICustomMessageSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     UICustomMessageParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider UICustomMessageInitParameters `json:"initProvider,omitempty"`
}

// UICustomMessageStatus defines the observed state of UICustomMessage.
type UICustomMessageStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        UICustomMessageObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// UICustomMessage is the Schema for the UICustomMessages API. Manages a UI custom message in Vault.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vault}
type UICustomMessage struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.messageBase64) || (has(self.initProvider) && has(self.initProvider.messageBase64))",message="spec.forProvider.messageBase64 is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.startTime) || (has(self.initProvider) && has(self.initProvider.startTime))",message="spec.forProvider.startTime is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.title) || (has(self.initProvider) && has(self.initProvider.title))",message="spec.forProvider.title is a required parameter"
	Spec   UICustomMessageSpec   `json:"spec"`
	Status UICustomMessageStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// UICustomMessageList contains a list of UICustomMessages
type UICustomMessageList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []UICustomMessage `json:"items"`
}

// Repository type metadata.
var (
	UICustomMessage_Kind             = "UICustomMessage"
	UICustomMessage_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: UICustomMessage_Kind}.String()
	UICustomMessage_KindAPIVersion   = UICustomMessage_Kind + "." + CRDGroupVersion.String()
	UICustomMessage_GroupVersionKind = CRDGroupVersion.WithKind(UICustomMessage_Kind)
)

func init() {
	SchemeBuilder.Register(&UICustomMessage{}, &UICustomMessageList{})
}
