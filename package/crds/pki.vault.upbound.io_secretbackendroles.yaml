---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: secretbackendroles.pki.vault.upbound.io
spec:
  group: pki.vault.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vault
    kind: SecretBackendRole
    listKind: SecretBackendRoleList
    plural: secretbackendroles
    singular: secretbackendrole
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SecretBackendRole is the Schema for the SecretBackendRoles API.
          <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretBackendRoleSpec defines the desired state of SecretBackendRole
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowAnyName:
                    description: Flag to allow any name
                    type: boolean
                  allowBareDomains:
                    description: Flag to allow certificates matching the actual domain.
                    type: boolean
                  allowGlobDomains:
                    description: Flag to allow names containing glob patterns.
                    type: boolean
                  allowIpSans:
                    description: Flag to allow IP SANs
                    type: boolean
                  allowLocalhost:
                    description: Flag to allow certificates for localhost.
                    type: boolean
                  allowSubdomains:
                    description: Flag to allow certificates matching subdomains.
                    type: boolean
                  allowedDomains:
                    description: The domains of the role.
                    items:
                      type: string
                    type: array
                  allowedDomainsTemplate:
                    description: Flag to indicate that `allowed_domains` specifies
                      a template expression (e.g. {{identity.entity.aliases.<mount
                      accessor>.name}})
                    type: boolean
                  allowedOtherSans:
                    description: Defines allowed custom SANs
                    items:
                      type: string
                    type: array
                  allowedSerialNumbers:
                    description: Defines allowed Subject serial numbers.
                    items:
                      type: string
                    type: array
                  allowedUriSans:
                    description: Defines allowed URI SANs
                    items:
                      type: string
                    type: array
                  backend:
                    description: The path of the PKI secret backend the resource belongs
                      to.
                    type: string
                  basicConstraintsValidForNonCa:
                    description: Flag to mark basic constraints valid when issuing
                      non-CA certificates.
                    type: boolean
                  clientFlag:
                    description: Flag to specify certificates for client use.
                    type: boolean
                  codeSigningFlag:
                    description: Flag to specify certificates for code signing use.
                    type: boolean
                  country:
                    description: The country of generated certificates.
                    items:
                      type: string
                    type: array
                  emailProtectionFlag:
                    description: Flag to specify certificates for email protection
                      use.
                    type: boolean
                  enforceHostnames:
                    description: Flag to allow only valid host names
                    type: boolean
                  extKeyUsage:
                    description: Specify the allowed extended key usage constraint
                      on issued certificates.
                    items:
                      type: string
                    type: array
                  generateLease:
                    description: Flag to generate leases with certificates.
                    type: boolean
                  keyBits:
                    description: The number of bits of generated keys.
                    type: number
                  keyType:
                    description: The generated key type.
                    type: string
                  keyUsage:
                    description: Specify the allowed key usage constraint on issued
                      certificates.
                    items:
                      type: string
                    type: array
                  locality:
                    description: The locality of generated certificates.
                    items:
                      type: string
                    type: array
                  maxTtl:
                    description: The maximum TTL.
                    type: string
                  name:
                    description: Unique name for the role.
                    type: string
                  namespace:
                    description: Target namespace. (requires Enterprise)
                    type: string
                  noStore:
                    description: Flag to not store certificates in the storage backend.
                    type: boolean
                  notBeforeDuration:
                    description: Specifies the duration by which to backdate the NotBefore
                      property.
                    type: string
                  organization:
                    description: The organization of generated certificates.
                    items:
                      type: string
                    type: array
                  ou:
                    description: The organization unit of generated certificates.
                    items:
                      type: string
                    type: array
                  policyIdentifier:
                    description: Policy identifier block; can only be used with Vault
                      1.11+
                    items:
                      properties:
                        cps:
                          description: Optional CPS URL
                          type: string
                        notice:
                          description: Optional notice
                          type: string
                        oid:
                          description: OID
                          type: string
                      required:
                      - oid
                      type: object
                    type: array
                  policyIdentifiers:
                    description: Specify the list of allowed policies OIDs.
                    items:
                      type: string
                    type: array
                  postalCode:
                    description: The postal code of generated certificates.
                    items:
                      type: string
                    type: array
                  province:
                    description: The province of generated certificates.
                    items:
                      type: string
                    type: array
                  requireCn:
                    description: Flag to force CN usage.
                    type: boolean
                  serverFlag:
                    description: Flag to specify certificates for server use.
                    type: boolean
                  streetAddress:
                    description: The street address of generated certificates.
                    items:
                      type: string
                    type: array
                  ttl:
                    description: The TTL.
                    type: string
                  useCsrCommonName:
                    description: Flag to use the CN in the CSR.
                    type: boolean
                  useCsrSans:
                    description: Flag to use the SANs in the CSR.
                    type: boolean
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: backend is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.backend)
            - message: name is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)
          status:
            description: SecretBackendRoleStatus defines the observed state of SecretBackendRole.
            properties:
              atProvider:
                properties:
                  allowAnyName:
                    description: Flag to allow any name
                    type: boolean
                  allowBareDomains:
                    description: Flag to allow certificates matching the actual domain.
                    type: boolean
                  allowGlobDomains:
                    description: Flag to allow names containing glob patterns.
                    type: boolean
                  allowIpSans:
                    description: Flag to allow IP SANs
                    type: boolean
                  allowLocalhost:
                    description: Flag to allow certificates for localhost.
                    type: boolean
                  allowSubdomains:
                    description: Flag to allow certificates matching subdomains.
                    type: boolean
                  allowedDomains:
                    description: The domains of the role.
                    items:
                      type: string
                    type: array
                  allowedDomainsTemplate:
                    description: Flag to indicate that `allowed_domains` specifies
                      a template expression (e.g. {{identity.entity.aliases.<mount
                      accessor>.name}})
                    type: boolean
                  allowedOtherSans:
                    description: Defines allowed custom SANs
                    items:
                      type: string
                    type: array
                  allowedSerialNumbers:
                    description: Defines allowed Subject serial numbers.
                    items:
                      type: string
                    type: array
                  allowedUriSans:
                    description: Defines allowed URI SANs
                    items:
                      type: string
                    type: array
                  backend:
                    description: The path of the PKI secret backend the resource belongs
                      to.
                    type: string
                  basicConstraintsValidForNonCa:
                    description: Flag to mark basic constraints valid when issuing
                      non-CA certificates.
                    type: boolean
                  clientFlag:
                    description: Flag to specify certificates for client use.
                    type: boolean
                  codeSigningFlag:
                    description: Flag to specify certificates for code signing use.
                    type: boolean
                  country:
                    description: The country of generated certificates.
                    items:
                      type: string
                    type: array
                  emailProtectionFlag:
                    description: Flag to specify certificates for email protection
                      use.
                    type: boolean
                  enforceHostnames:
                    description: Flag to allow only valid host names
                    type: boolean
                  extKeyUsage:
                    description: Specify the allowed extended key usage constraint
                      on issued certificates.
                    items:
                      type: string
                    type: array
                  generateLease:
                    description: Flag to generate leases with certificates.
                    type: boolean
                  id:
                    type: string
                  keyBits:
                    description: The number of bits of generated keys.
                    type: number
                  keyType:
                    description: The generated key type.
                    type: string
                  keyUsage:
                    description: Specify the allowed key usage constraint on issued
                      certificates.
                    items:
                      type: string
                    type: array
                  locality:
                    description: The locality of generated certificates.
                    items:
                      type: string
                    type: array
                  maxTtl:
                    description: The maximum TTL.
                    type: string
                  name:
                    description: Unique name for the role.
                    type: string
                  namespace:
                    description: Target namespace. (requires Enterprise)
                    type: string
                  noStore:
                    description: Flag to not store certificates in the storage backend.
                    type: boolean
                  notBeforeDuration:
                    description: Specifies the duration by which to backdate the NotBefore
                      property.
                    type: string
                  organization:
                    description: The organization of generated certificates.
                    items:
                      type: string
                    type: array
                  ou:
                    description: The organization unit of generated certificates.
                    items:
                      type: string
                    type: array
                  policyIdentifier:
                    description: Policy identifier block; can only be used with Vault
                      1.11+
                    items:
                      properties:
                        cps:
                          description: Optional CPS URL
                          type: string
                        notice:
                          description: Optional notice
                          type: string
                        oid:
                          description: OID
                          type: string
                      type: object
                    type: array
                  policyIdentifiers:
                    description: Specify the list of allowed policies OIDs.
                    items:
                      type: string
                    type: array
                  postalCode:
                    description: The postal code of generated certificates.
                    items:
                      type: string
                    type: array
                  province:
                    description: The province of generated certificates.
                    items:
                      type: string
                    type: array
                  requireCn:
                    description: Flag to force CN usage.
                    type: boolean
                  serverFlag:
                    description: Flag to specify certificates for server use.
                    type: boolean
                  streetAddress:
                    description: The street address of generated certificates.
                    items:
                      type: string
                    type: array
                  ttl:
                    description: The TTL.
                    type: string
                  useCsrCommonName:
                    description: Flag to use the CN in the CSR.
                    type: boolean
                  useCsrSans:
                    description: Flag to use the SANs in the CSR.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
